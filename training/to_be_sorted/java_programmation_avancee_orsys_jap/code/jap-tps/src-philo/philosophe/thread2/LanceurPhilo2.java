package philosophe.thread2;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.concurrent.ThreadFactory;public class LanceurPhilo2 {		public static void main(String[] args) {		int nbPhil = 5;		int nbServ = 3;		if (args.length > 0) {			nbPhil = Integer.parseInt(args[0], 10);			nbServ = Integer.parseInt(args[1], 10);		}				ExecutorService serveurs = Executors.newFixedThreadPool(nbServ, new ThreadFactory() {			public Thread newThread(Runnable arg0) {				Thread t = new Thread(arg0);				t.setDaemon(true);				return t;			}			});				Philosophe2[] phil;		phil = new Philosophe2[nbPhil];				for (int i = 0; i < nbPhil; i++) phil[i] = new Philosophe2(i, serveurs);		for (int i = 0; i < nbPhil; i++) phil[i].start();	}}